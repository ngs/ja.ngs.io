<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:wfw="http://wellformedweb.org/CommentAPI/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" xmlns:slash="http://purl.org/rss/1.0/modules/slash/">
  <channel>
    <title>Atsushi Nagase</title>
    <atom:link href="https://ja.ngs.io/rss.xml" rel="self" type="application/rss+xml"/>
    <atom:link href="https://ja.ngs.io/feed.xml" type="application/atom+xml"/>
    <language>ja</language>
    <description>プログラミング、ガジェット、電子工作、ロードバイク、ランニング、旅行など、趣味や仕事のことを書き綴るブログ。</description>
    <link>https://ja.ngs.io/</link>
    <lastBuildDate>Sun, 08 Jul 2018 00:00:00 -0000</lastBuildDate>
    <item>
      <title>CI2Go Today ウィジェット対応</title>
      <link>https://ja.ngs.io/2018/07/08/ci2go/</link>
      <guid>https://ja.ngs.io/2018/07/08/ci2go/</guid>
      <pubDate>Sun, 08 Jul 2018 00:00:00 -0000</pubDate>
      <author>a@ngs.io (長瀬 敦史)</author>
      <description>&lt;p&gt;iPhone と iPad 向け CircleCI クライアント  CI2Go バージョン 2.1.0 を公開しました。&lt;/p&gt;&lt;p&gt;バージョン 2.1.0 は以下の更新を含みます:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Today ウィジェット
&lt;/li&gt;&lt;li&gt;SSH 接続
&lt;/li&gt;&lt;li&gt;端末上の成果物を削除
&lt;/li&gt;&lt;li&gt;URL でアプリを開く
&lt;/li&gt;&lt;/ul&gt;&lt;h2&gt;Today ウィジェット&lt;/h2&gt;&lt;p&gt;CI2Go Today ウィジェットを Today ビューに追加できます。&lt;/p&gt;

&lt;p&gt;選択したプロジェクト、ブランチ、または全てのフォローしているプロジェクトの直近5件のビルドが表示されます。&lt;/p&gt;

&lt;h2&gt;SSH 接続&lt;/h2&gt;&lt;p&gt;SSH 接続が有効なビルドの実行中で Panic の Prompt のような ssh:// URI スキームに対応しているクライアントがインストールされている場合、SSH セクションが表示されるようになりました。&lt;/p&gt;

&lt;p&gt;コンテナの行を選択することで、SSH クライアントを起動します。&lt;/p&gt;

&lt;h2&gt;端末上の成果物を削除&lt;/h2&gt;&lt;p&gt;テーブルの行を左にスワイプして出てくるゴミ箱アイコンから、ダウンロード済のビルド成果物を削除できます。&lt;/p&gt;

&lt;h2&gt;URL でアプリを開く&lt;/h2&gt;

&lt;p&gt;chttps://, ci2go://, ci2go+https:// の URI スキームに対応しました。&lt;/p&gt;

&lt;p&gt;CircleCI のビルド URL のプロトコル部分を以下のように変更することで、CI2Go を起動できます。&lt;/p&gt;

&lt;p&gt;https://circleci.com/gh/circleci/frontend/3439 から ci2go://circleci.com/gh/circleci/frontend/3439&lt;/p&gt;

&lt;p&gt;不具合などありましたら、 イシュー を起票いただけると幸いです。&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Coveralls fastlane プラグイン</title>
      <link>https://ja.ngs.io/2018/07/07/fastlane-plugin-coveralls/</link>
      <guid>https://ja.ngs.io/2018/07/07/fastlane-plugin-coveralls/</guid>
      <pubDate>Sat, 07 Jul 2018 14:59:00 -0000</pubDate>
      <author>a@ngs.io (長瀬 敦史)</author>
      <description>&lt;p&gt;Xcode のテストカバレッジを Coveralls へアップロードする fastlane&amp;nbsp;プラグイン と、その依存先で、単体でもコマンドラインツールとして利用できる xccoveralls を公開しました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;ngs/fastlane-plugin-coveralls
&lt;/li&gt;&lt;li&gt;ngs/xccoveralls
&lt;/li&gt;&lt;/ul&gt;&lt;h2&gt;使ってみる&lt;/h2&gt;

&lt;p&gt;以下のコマンドを実行して&lt;/p&gt;
  fastlane add_plugin coveralls  
&lt;p&gt;Fastfile に以下の行を追加&lt;/p&gt;
  lane :send_coveralls do
  coveralls
end  
&lt;p&gt;テストターゲットの Code Coverage　のチェックボックスをオンに設定し&lt;/p&gt;&lt;p&gt;fastlane コマンドよりコードカバレッジを送信できます&lt;/p&gt;
  export XCCOVERALLS_REPO_TOKEN=... # Coveralls.io から自分のものを取ってくる
bundle exec fastlane send_coveralls  
&lt;p&gt;例として CI2Go のカバレッジを Coveralls で、その設定をFastfile で確認いただけます。&lt;/p&gt;

&lt;h2&gt;開発のきっかけ&lt;/h2&gt;

&lt;p&gt;fastlane のアクション として組み込まれている Xcov を利用しようとしました。&lt;/p&gt;

&lt;p&gt;しかし、Xcov はカバレッジの要約のみ保持している .xccovreport または .xccoverage の情報を取得して送信しているため、カバー行の情報まで送信しません。&lt;/p&gt;

&lt;p&gt;そこで、Xcode 9.3 より提供されている xcrun xccov を利用して、新たにこのツールを実装しました。&lt;/p&gt;
  # ファイルの一覧を取得する
$ xcrun xccov view --file-list DerivedData/Logs/Build/*.xccovarchive
# 特定のファイルのカバレッジを取得する
$ xcrun xccov view --file /Users/ngs/src/CI2Go/AppDelegate.swift \
    DerivedData/Logs/Build/*.xccovarchive  
&lt;p&gt;参照: xccov: Xcode Code Coverage Report for Humans&lt;/p&gt;

&lt;p&gt;もし何か問題がありましたら イシュー を起票いだたけると嬉しいです。&lt;/p&gt;

&lt;p&gt;では XCTesting を楽しんでください &lt;/p&gt;
</description>
    </item>
    <item>
      <title>CI2Go バージョン 2</title>
      <link>https://ja.ngs.io/2018/07/02/ci2go-v2/</link>
      <guid>https://ja.ngs.io/2018/07/02/ci2go-v2/</guid>
      <pubDate>Mon, 02 Jul 2018 00:20:00 -0000</pubDate>
      <author>a@ngs.io (長瀬 敦史)</author>
      <description>&lt;p&gt;iPhone と iPad 向け CircleCI クライアント  CI2Go のメジャーバージョンアップを行いました。&lt;/p&gt;&lt;p&gt;バージョン 2 は以下のアップデートを含んでいます。&lt;/p&gt;&lt;h2&gt;iPhone X に最適化&lt;/h2&gt;&lt;p&gt;iPhone X の 5.8 インチのスクリーンに最適化しました。&lt;/p&gt;

&lt;h2&gt;シングルサインオン&lt;/h2&gt;&lt;p&gt;API トークンを CircleCI の画面からコピーしてくる代わりに、シングルサインオンを利用するよう、認証フローを刷新しました。&lt;/p&gt;

&lt;p&gt;内部で自動的に 個人 API トークン を作成します。&lt;/p&gt;

&lt;h2&gt;ビルド成果物 ブラウザー&lt;/h2&gt;&lt;p&gt;ビルド成果物 ブラウザー を再構築しました。&lt;/p&gt;

&lt;p&gt;全てのファイルのダウンロードを待つことなく、素早く成果物を確認できます。&lt;/p&gt;

&lt;p&gt;必要な時にだけ、ファイルのダウンロードを開始し、画面を離れてもバックグラウンドでダウンロードを続けます。&lt;/p&gt;

&lt;h2&gt;Apple Watch コンプリケーション&lt;/h2&gt;&lt;p&gt;Apple Watch コンプリケーション の提供を開始しました。&lt;/p&gt;

&lt;p&gt;時計の文字盤でビルドのステータスを確認できます。&lt;/p&gt;

&lt;p&gt;watchOS API の制約により、リアルタイムな情報の更新は行いません。&lt;/p&gt;

&lt;h2&gt;パフォーマンス改善&lt;/h2&gt;

&lt;p&gt;このバージョンで、全ての実装を一からみなおしました。&lt;/p&gt;

&lt;p&gt;オフラインデータの扱いを行わなくなった代わりに、より素早い挙動を行いようになりました。&lt;/p&gt;

&lt;p&gt;不具合などありましたら、 イシュー を起票いただけると幸いです。&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Slack のコマンドを使って TeamSpirit に打刻する</title>
      <link>https://ja.ngs.io/2018/02/14/ts-dakoku/</link>
      <guid>https://ja.ngs.io/2018/02/14/ts-dakoku/</guid>
      <pubDate>Wed, 14 Feb 2018 11:00:00 -0000</pubDate>
      <author>a@ngs.io (長瀬 敦史)</author>
      <description>&lt;p&gt;CAMPFIRE の従業員は、勤怠・経費・工数などの管理を TeamSpirit を使って行っています。&lt;/p&gt;

&lt;p&gt;勤怠情報は SalesForce Force.com 上にインストールされた TeamSpirit の勤怠管理画面などから行います。&lt;/p&gt;

&lt;p&gt;ref: 【利用環境・機能】知っていると得をする！チームスピリットと Force.com との関係を理解しよう！&lt;/p&gt;

&lt;p&gt;勤怠情報は、毎日リアルタイムに付けないと、月末にまとめて、過去を振り返って記入する必要があり、従業員に負荷がかかっています。&lt;/p&gt;

&lt;p&gt;この打刻作業を毎日習慣づけて、負荷なく行うため、いつも使っている Slack のコマンドで行える、Slack のアプリケーションを作成しました。&lt;/p&gt;

&lt;p&gt;ソースコードは GitHub 上で公開しています。&lt;/p&gt;

&lt;p&gt;TeamSpirit と Slack を利用している企業であれば、Heroku などを使ってアプリケーションを立ち上げ、全ての従業員が利用できます。&lt;/p&gt;

&lt;p&gt;ref: ngs/ts-dakoku&lt;/p&gt;

&lt;p&gt;以下に導入手順を記載します。&lt;/p&gt;&lt;h2&gt;手順&lt;/h2&gt;

 
&lt;li&gt;TeamSpirit が動く Force.com 環境から Sandbox 環境を作成する
&lt;/li&gt;&lt;li&gt;Sandbox に Apex のソースコードを追加する
&lt;/li&gt;&lt;li&gt;Sandbox より、送信変更セットを使い、Apex コードを本番環境にアップロードする
&lt;/li&gt;&lt;li&gt;TeamSpirit 本番環境で 接続アプリケーション を作成する
&lt;/li&gt;&lt;li&gt;Slack でアプリケーションを作成する
&lt;/li&gt;&lt;li&gt;アプリケーションを Heroku 上にデプロイする
&lt;/li&gt; 

&lt;h2&gt;1. Force.com Sandbox 環境を作成する&lt;/h2&gt;

&lt;p&gt;TeamSpirit は外部に公開されている API がありません。&lt;/p&gt;

&lt;p&gt;そこで、Force.com に Apex REST のエンドポイントを作成します。&lt;/p&gt;

&lt;p&gt;ref: Creating REST APIs using Apex REST&lt;/p&gt;

&lt;p&gt;TeamSpirit が動いている本番環境の Force.com では、Apex クラス、トリガーなどの開発資材を直接作成することはできません。&lt;/p&gt;

&lt;p&gt;[設定] 画面より、 リリース &amp;gt; Sandbox 画面を表示し、 新規 Sandbox ボタンをクリックして、Sandbox 環境を作ります。&lt;/p&gt;&lt;p&gt;名前 と 説明 欄には &lt;strong&gt;任意の内容&lt;/strong&gt; を入力し、 Sandbox ライセンス は &lt;strong&gt;Developer&lt;/strong&gt; を選択します。&lt;/p&gt;

&lt;p&gt;次にでてくる、 Sandbox オプション の Apex クラス は空欄のまま、 作成ボタン をクリックします。&lt;/p&gt;

&lt;p&gt;しばらくすると、Sandbox 環境の使用準備が整った旨のメールが届きます。&lt;/p&gt;

&lt;p&gt;メールに記載されているログイン URL を開き、ログインユーザ名の欄に、TeamSpirit のログインメールアドレスの末尾に小文字で Sandbox 環境名、パスワードは TeamSpirit と同じものを入力し、ログインします。&lt;/p&gt;

&lt;h2&gt;2. Sandbox に Apex のソースコードを追加する&lt;/h2&gt;&lt;p&gt;Sandbox 環境画面右上にある、ログインユーザーの名前をクリックし、ナビゲーションを展開、 開発コンソール を開きます。&lt;/p&gt;&lt;p&gt;管理コンソール左上メニューバーから File &amp;gt; New &amp;gt; Apex Class を選択し、 TSTimeTableAPIController, TSTimeTableAPIControllerTest という名前の Apex クラスを作成します。&lt;/p&gt;

&lt;p&gt;コードエディター上に、それぞれリポジトリからコピーしたソースコードを貼り付け、保存します。&lt;/p&gt;

&lt;p&gt;ts-dakoku/apex/src/classes at master · ngs/ts-dakoku&lt;/p&gt;

&lt;p&gt;リポジトリ内の apex ディレクトリは Force.com IDE のプロジェクトとしても取り込んで利用することができます。&lt;/p&gt;

&lt;h2&gt;3. 本番環境に Apex クラスをアップロードする&lt;/h2&gt;

&lt;p&gt;[設定] 画面より、 リリース &amp;gt; 送信変更セット 画面を表示し、 新規 ボタンをクリックして、新しい変更セットを作成します。&lt;/p&gt;

&lt;p&gt;変更セットコンポーネント セクションにある、 追加 ボタンより、資材選択画面を表示、Apex クラス TSTimeTableAPIController, TSTimeTableAPIControllerTest を選択し、 変更セットに追加 ボタンをクリックします。&lt;/p&gt;&lt;p&gt;変更セットコンポーネント セクションに、選択した Apex クラスが表示されていることを確認したら、 アップロード ボタンをクリック、次の画面で 対象組織 から 本番 を選択し アップロード ボタンをクリックします。&lt;/p&gt;

&lt;p&gt;しばらくすると、変更セットのアップロードが成功した旨のメールが届きます。&lt;/p&gt;

&lt;p&gt;TeamSpirit 本番環境の [設定] 画面より リリース &amp;gt; 受信変更セット 画面を表示し、 リリース待ちの変更セット セクションより、該当の変更セットを選択、リリース ボタンをクリックし、次の画面の テストオプションの選択 から デフォルト を選択、 リリース ボタンをクリックします。&lt;/p&gt;

&lt;p&gt;反映が終わると、 [設定] 画面より、 開発 &amp;gt; Apex クラス に TSTimeTableAPIController, TSTimeTableAPIControllerTest が追加されます。&lt;/p&gt;

&lt;p&gt;TSTimeTableAPIController を選択し、 セキュリティー ボタンをクリック、 有効にされたプロファイル に全てのプロファイルを追加し、保存してください。&lt;/p&gt;

&lt;h2&gt;4. Force.com 接続アプリケーション を作成する&lt;/h2&gt;

&lt;p&gt;TeamSpirit 本番環境の [設定] 画面より、 ビルド &amp;gt; 作成 &amp;gt; アプリケーション 画面を表示し、 接続アプリケーション セクションの 新規 ボタンをクリック、 新規接続アプリケーション 画面を表示します。&lt;/p&gt;&lt;p&gt;基本情報 セクション内 接続アプリケーション名 , API 参照名 , 取引先責任者 メール は任意の内容を入力します。&lt;/p&gt;&lt;p&gt;API (OAuth 設定の有効化) セクション内 OAuth 設定の有効化 チェックボックスをオンにし、入力項目を展開します。&lt;/p&gt;

&lt;p&gt;コールバック URL は、後述のアプリケーションデプロイ先を URL を元に、 https://{ホスト名}/oauth/salesforce/callback の形式で入力します。&lt;/p&gt;

&lt;p&gt;選択した OAuth 範囲 は、 フルアクセス (full) , ユーザに代わっていつでも要求を実行 (refresh_token, offline_access) を選択します。&lt;/p&gt;

&lt;p&gt;上記を入力した上、保存ボタンをクリックします。&lt;/p&gt;

&lt;p&gt;アプリケーション詳細画面に遷移するので、 API (OAuth 設定の有効化) セクションより、 コンシューマ鍵 , コンシューマの秘密 の内容をテキストファイルなどに保存しておきます。&lt;/p&gt;

&lt;h2&gt;5. Slack でアプリケーションを作成する&lt;/h2&gt;

&lt;p&gt;Slack の API サイトを開き、 Create New App ボタンをクリック、 App Name と Developer Slack Workspace を入力し、Slack アプリケーションを作成します。&lt;/p&gt;

&lt;p&gt;Add features and functionality のセクション内にある、 Slash Commands と Interactive Components を設定します。&lt;/p&gt;

 Slash Commands 

&lt;p&gt;Slash Commands 画面より、 Create New Command ボタンをクリック、新規作成画面で以下のように入力します。&lt;/p&gt;&lt;ul&gt;
&lt;li&gt;Command: /ts
&lt;/li&gt;&lt;li&gt;Request URL: https://{ホスト名}/hooks/slash
&lt;/li&gt;&lt;li&gt;Short Description (任意): 例: TeamSpirit で打刻します
&lt;/li&gt;&lt;/ul&gt;

 Interactive Components &lt;p&gt;Interactive Components 画面で、 Enable Interactive Components ボタンをクリック、 Request URL に https://{ホスト名}/hooks/interactive のフォーマットで URL を入力し、緑の Enable Interactive Components ボタンをクリックし、保存します。&lt;/p&gt;

 アプリケーションをインストール 

&lt;p&gt;Install your app to your workspace セクションを展開し、 Install App to Workspace ボタンをクリックします。&lt;/p&gt;

&lt;p&gt;App Credentials より、 Verification Token をコピーし、先程コンシューマー鍵を保存したテキストファイルに貼り付け、保存します。&lt;/p&gt;

&lt;h2&gt;6. アプリケーションをデプロイする&lt;/h2&gt;

&lt;p&gt;ここでは Heroku を使ってホスティングする例を記載します。&lt;/p&gt;

&lt;p&gt;GitHub リポジトリ の README 内にある、 Deploy to Heroku ボタンをクリックし、Heroku のアプリケーション設定を入力画面を開きます。&lt;/p&gt;

&lt;p&gt;Config Variables セクション内の環境変数欄にこれまでテキストファイルに保存していた情報を入力します。&lt;/p&gt;

&lt;p&gt;以上で設定は完了です。&lt;/p&gt;

&lt;p&gt;お使いの Slack ワークスペースで /ts コマンドを実行してみてください。&lt;/p&gt;

&lt;p&gt;導入でお困りのことがありましたら、連絡先 か Twitter などでお気軽にお問い合わせください。&lt;/p&gt;

&lt;p&gt;バグ報告は GitHub Issues に起票頂けると幸いです。&lt;/p&gt;
</description>
    </item>
    <item>
      <title>2017年所感</title>
      <link>https://ja.ngs.io/2018/01/01/shokan2017/</link>
      <guid>https://ja.ngs.io/2018/01/01/shokan2017/</guid>
      <pubDate>Mon, 01 Jan 2018 14:30:00 -0000</pubDate>
      <author>a@ngs.io (長瀬 敦史)</author>
      <description>&lt;p&gt;今年は大阪の実家で正月を過ごしています。&lt;/p&gt;

&lt;p&gt;年越しには間に合いませんでしたが、例年 にならい、2017年の所感と2018年に注力することなどを書いていこうと思います。&lt;/p&gt;&lt;h2&gt;仕事・技術&lt;/h2&gt;

&lt;p&gt;9月に転職するまでは、前職 (現・顧問先) の Oneteam で研究開発を担当していました。Chatbot や CRM、認証基盤について調査と実装を行い、一部プロダクトに取り込みました。&lt;/p&gt;

&lt;p&gt;2017年初旬から5月頃にかけて、株式会社 mov で 訪日ラボ・訪日コム の構築をしていました。現在は主に自分以外の技術者がメンテナンスしています。&lt;/p&gt;

&lt;p&gt;9月に CAMPFIRE に入ってからは、技術基盤の再構築、新規サービスのローンチ、情報システム、採用、組織の諸々を行っていました。&lt;/p&gt;

&lt;p&gt;入社してからそれらを並行して行ってきたため、それぞれがやりきれていない感じがあるのですが、仲間も増え、自分の役割も明確になってきたので、今年は腰を据えて技術者としての役割を全うしていきます。&lt;/p&gt;

&lt;p&gt;仕事以外の開発: OSS や体外的な発表については、仕事で使っているライブラリをメンテナンスする以外、表立って言及できるようなものはありませんでした。&lt;/p&gt;

&lt;p&gt;今年も仕事に注力していく所存ですので、OSS の発表はないと思います。&lt;/p&gt;

&lt;h2&gt;旅行&lt;/h2&gt;

&lt;p&gt;キャンプにはぼちぼち行けたと思います。その分、釣行できていなかったなと反省しております。あと、国外に一歩も足を運んでいないので、今年こそは。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;03/25, 26 塩原グリーンビレッジ
&lt;/li&gt;&lt;li&gt;05/03-05 浅間園キャンプ場
&lt;/li&gt;&lt;li&gt;05/19-21 いろりの宿 七里川温泉, 宮原オートキャンプ場
&lt;/li&gt;&lt;li&gt;10/07-09 丸沼高原
&lt;/li&gt;&lt;li&gt;11/03-05 朝霧高原 ふもっとぱらキャンプ場
&lt;/li&gt;&lt;/ul&gt;

&lt;h2&gt;音楽&lt;/h2&gt;

&lt;p&gt;Foursquare の履歴を見ながら思い返していると、思っていたよりはちゃんと遊んでいたと思うので、今年もサボらず遊んでいきたいと思います。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;01/21 Osunlade Asia Tour 2017 at Contact Tokyo
&lt;/li&gt;&lt;li&gt;02/27 くるり at Zepp Diver City TOKYO
&lt;/li&gt;&lt;li&gt;04/19 夜のミューズメント at 渋谷 CLUB QUATTRO
&lt;/li&gt;&lt;li&gt;04/28 DJ Sneak Japan Tour 2017
&lt;/li&gt;&lt;li&gt;05/27, 28 Taicoclub 2017
&lt;/li&gt;&lt;li&gt;06/04 Body and SOUL Live Tokyo 2017
&lt;/li&gt;&lt;li&gt;07/16 Kenny Dope at Contact Tokyo
&lt;/li&gt;&lt;li&gt;07/28-30 Fuji Rock Festival 2017
&lt;/li&gt;&lt;li&gt;08/25 Music Of Many Colours / Zepherin Saint “The Dub I Lost” Release Tour
&lt;/li&gt;&lt;li&gt;09/23, 24 CAMP Off-Tone 2017
&lt;/li&gt;&lt;li&gt;09/30 Deep Space at Contact Tokyo
&lt;/li&gt;&lt;li&gt;11/18 MASTERS AT WORK in JAPAN at Studio Coast
&lt;/li&gt;&lt;li&gt;12/17 Dachambo at 月見ル君想フ
&lt;/li&gt;&lt;/ul&gt;

&lt;h2&gt;健康&lt;/h2&gt;

&lt;p&gt;2017/02/12 に行われた名古屋マラソンでフルを完走してからは、しばらく通勤ランもサボっており、食生活・飲酒量などなど生活習慣が悪化したため、結果1年前に比べて不健康をこじらせている次第です。&lt;/p&gt;

&lt;p&gt;今年は、規則正しい生活と、節度ある飲食習慣を心がけようと思います。&lt;/p&gt;

&lt;h2&gt;家族&lt;/h2&gt;

&lt;p&gt;長女が小4、長男も小学校に上がり、次女もはっきり意思表示ができるようになってきて、今年から幼稚園に通い始めるなど、さらに親離れが進み寂しい次第ですが、引き続き、家族旅行などは定期的に実施して、存在を忘れられないように思い出を作ってまいろうという所存です。&lt;/p&gt;
</description>
    </item>
    <item>
      <title>CAMPFIRE, Inc. の CTO に就任しました🔥</title>
      <link>https://ja.ngs.io/2017/09/01/campfire-inc/</link>
      <guid>https://ja.ngs.io/2017/09/01/campfire-inc/</guid>
      <pubDate>Fri, 01 Sep 2017 05:30:00 -0000</pubDate>
      <author>a@ngs.io (長瀬 敦史)</author>
      <description>&lt;p&gt;2017-09-01 付けで CAMPFIRE, Inc. に正社員として入社し、執行役員 最高技術責任者/CTO に就任いたしました。&lt;/p&gt;&lt;h2&gt;モチベーション&lt;/h2&gt;

&lt;p&gt;入社が決まる以前、インターネットを通じた労働の機会の民主化の手段について模索して、いくつかのプロトタイプ開発やヒアリングを行っていました。&lt;/p&gt;

&lt;p&gt;そんな中、古くからの友人に、代表の 家入 一真 氏 を紹介していただきました。&lt;/p&gt;

&lt;p&gt;彼が率いる CAMPFIRE, Inc. には CAMPFIRE WAY なる行動理念が明文化されており、その中で以下のミッションを掲げています:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;資金集めを民主化し、お金の偏りを無くし、世界中の誰しもが声をあげられる世の中をつくる&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;この CAMPFIRE WAY は、前述の自身が模索していたビジョンに通ずるものがあると考え、是非一緒にお仕事させていただきたい旨を申し出、参画させていただくことになりました。&lt;/p&gt;

&lt;h2&gt;なにをするか&lt;/h2&gt;

&lt;p&gt;既にサービス提供を開始している CAMPFIRE、polca、金融事業から始まり、新規事業、OKIMOCHI のような会社名義でのオープンソースソフトウェア提供に関わる技術的な戦略を策定します。&lt;/p&gt;

&lt;p&gt;会社が提供する全てのサービスの技術を統括する立場で、相互に役割を補完し合い、一つの経済圏をつくるべく、以下のミッションを遂行いたします。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;中長期的なマイルストーンに対しての技術的なアプローチの策定
&lt;/li&gt;&lt;li&gt;プロダクトファーストな組織の構築・運営
&lt;/li&gt;&lt;li&gt;採用方針の策定・実施
&lt;/li&gt;&lt;li&gt;インフラとしての事業を守るためのセキュリティー施策の策定・実施
&lt;/li&gt;&lt;/ul&gt;

&lt;h2&gt;どのように働くか&lt;/h2&gt;

&lt;p&gt;CAMPFIRE WAY を技術の力で実現する組織を運営していきます。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;社内外問わず、人々からアクセスしやすいオープンなチームにする&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;手段については挙げればきりがないですが、例えば、以下のようなものです&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;開発内容・業務フロー・設計指針の明文化
&lt;/li&gt;&lt;li&gt;情報共有の手段の整理
&lt;/li&gt;&lt;li&gt;開発・運用の自動化
&lt;/li&gt;&lt;li&gt;情報の可能な限りのオープン化
&lt;/li&gt;&lt;/ul&gt;

&lt;p&gt;また、キャリアを通じて注力してきた、技術基盤による開発者の生産性向上へのチャレンジも継続して行います。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;怠惰・傲慢・短気 / Laziness, Impatience, Hubris - Larry Wall&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;このプログラマの三大美徳を尊重し、開発生産性を常に向上し続けるべく、組織と技術を育てていきます。&lt;/p&gt;

&lt;h2&gt;Oneteam について&lt;/h2&gt;

&lt;p&gt;2015年8月より2年間勤めてきた Oneteam Inc. のリードエンジニアとしての職は2017年8月末付けで退任し、9月よりアドバイザーに就任いたしました。&lt;/p&gt;

&lt;p&gt;同社でも、前述同様の業務を行ってきましたが、これからは、少し物理的に離れたところから、引き続き Oneteam の仲間たちのサポートを行っていこうと思います。&lt;/p&gt;

&lt;h2&gt;イベント登壇します&lt;/h2&gt;

&lt;p&gt;2017-09-09 の土曜日、ビズリーチ社 主催の ULTRA BEER BASH に CXO (Chief eXperience Officer) @kotarok と登壇いたします。&lt;/p&gt;

&lt;p&gt;2人ともジョインして間もないのですが、 &lt;strong&gt;“お金をなめらかにする” プラットフォームづくりの現場&lt;/strong&gt; と題して、現在進めているプロダクト部門の体制や、弊社のビジョン、それに対してどう実現していくのかという意気込みを発表しようと思います。&lt;/p&gt;

&lt;h2&gt;採用してます&lt;/h2&gt;

&lt;p&gt;CAMPFIRE では、技術の力で “お金をなめらかにする” サービスを一緒に開発していただける、iOS, Android, Ruby や Python, インフラなどのエンジニアを絶賛募集しています。&lt;/p&gt;

&lt;p&gt;参照: CAMPFIRE の採用/求人一覧 - Wantedly&lt;/p&gt;

&lt;p&gt;興味があるかたは、Wantedly からでも構いませんし、直接長瀬まで連絡をいただいても構いません。&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Salesforce Force.com Apex のテストを CircleCI 2.0 で行う</title>
      <link>https://ja.ngs.io/2017/04/19/apex-ci/</link>
      <guid>https://ja.ngs.io/2017/04/19/apex-ci/</guid>
      <pubDate>Wed, 19 Apr 2017 00:00:00 -0000</pubDate>
      <author>a@ngs.io (長瀬 敦史)</author>
      <description>&lt;p&gt;CircleCI の新バージョン 2.0 は現在、パブリックベータとして提供されており、現行版の 1.0 とは違い、ビルドを実行する Docker Image を指定できるようになっています。&lt;/p&gt;

&lt;p&gt;ref: CircleCI 2.0&lt;/p&gt;

&lt;p&gt;これを利用して、Salesforce Force.com Apex のテストとデプロイを行うための Docker Image とサンプルプロジェクトを公開しました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;サンプルプロジェクト
&lt;/li&gt;&lt;li&gt;atsnngs/force-com on Docker Hub
&lt;/li&gt;&lt;li&gt;ngs/apex-circleci-example on CircleCI
&lt;/li&gt;&lt;/ul&gt;

&lt;p&gt;以下にセットアップ手順を記載します。&lt;/p&gt;&lt;h2&gt;設定手順&lt;/h2&gt;

 1. ディレクトリ構成 

&lt;p&gt;ディレクトリ構成は Force IDE が使用しているファイル・ディレクトリ名に互換しています。&lt;/p&gt;
  .
├── src
│   ├── classes
│   │   └── MyClass.cls
│   └── triggers
│       └── MyTrigger.trigger
│
└── wsdl # 後述
    ├── apex.wsdl
    └── enterprise.wsdl  
 2. WSDL のダウンロード 

&lt;p&gt;WSDL ファイルと、それを元に生成される Java ライブラリは、インスタンスの状態によって内容が違うため、Docker Image には含んでいません。&lt;/p&gt;

&lt;p&gt;以下の手順で WSDL ファイルをプロジェクトに追加します。&lt;/p&gt;

 
&lt;li&gt;設定 のクイック検索から API 画面を検索
&lt;/li&gt;&lt;li&gt;Enterprise WSDL の生成 と Apex WSDL を右クリックメニューなどからコンピュータにダウンロード
&lt;/li&gt;&lt;li&gt;プロジェクトディレクトリ内 wsdl フォルダに .wsdl という拡張子で保存し、バージョン管理に追加
&lt;/li&gt; 

 3. .circleci/config.yml 

&lt;p&gt;CircleCI の設定は今までの circle.yml ではなく、 .circleci というディレクトリに config.yml というファイル名で記述します。記述内容には互換性はありません。&lt;/p&gt;

&lt;p&gt;ref: Configuring Jobs&lt;/p&gt;

&lt;p&gt;master ブランチのビルドでは、後述の環境変数で設定したインスタンスに Apex コードを反映します。&lt;/p&gt;
  version: 2
jobs:
  build:
    working_directory: /repo
    docker:
      - image: atsnngs/force-com:latest
    steps:
      - checkout
      - run:
          command: rm -rf /src /wsdl &amp;amp;&amp;amp;  mv /repo/src /src &amp;amp;&amp;amp; mv /repo/wsdl /wsdl
      - run:
          command: export DEPLOY=$([[ $CIRCLE_BRANCH == 'master' ]] &amp;amp;&amp;amp; echo 1 || true); /entrypoint/run.sh  
 4. 環境変数の設定 

&lt;p&gt;CircleCI のプロジェクト設定内 Environment Variables 画面にて、必要な環境変数を設定します。&lt;/p&gt;

 SF_SERVER 

&lt;p&gt;API エンドポイント。利用しているインスタンスのドメインを元にします。&lt;/p&gt;

&lt;p&gt;例: https://ap5.salesforce.com の場合 https://ap5-api.salesforce.com&lt;/p&gt;

 SF_USERNAME 

&lt;p&gt;Salesforce のログイン ID。&lt;/p&gt;

 SF_PASSWORD 

&lt;p&gt;Salesforce のログインパスワード。&lt;/p&gt;

&lt;p&gt;もし2段階認証を有効にしている場合は、パスワードに続けてセキュリティートークンを入力します。&lt;/p&gt;

&lt;p&gt;セキュリティートークンの取得方法がわからない場合は以下のヘルプドキュメントを参照してください。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;セキュリティトークンのリセット
&lt;/li&gt;&lt;/ul&gt;

&lt;h2&gt;その他 活用方法&lt;/h2&gt;

&lt;p&gt;今回の目的は継続的ビルドと配信でしたが、ローカルの Docker を使ったコマンドラインビルドにも活用できます。&lt;/p&gt;
  docker pull atsnngs/force-com
cat &amp;gt; envfile.txt &amp;lt;&amp;lt;ENVFILE
SF_USERNAME=you@example.com
SF_PASSWORD=PASSWORD+SECURITY_TOKEN
SF_SERVER=https://xxx-api.salesforce.com
ENVFILE
docker run \
  -v $(pwd)/wsdl:/wsdl \
  -v $(pwd)/src/classes:/src/classes \
  -v $(pwd)/src/triggers:/src/triggers \
  --rm \
  --env-file envfile.txt \
  atsnngs/force-com  
&lt;p&gt;Salesforce プラットフォームを利用したアイデアや困りごとがありましたら、ぜひディスカッションしましょう。&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Mindstorms NXT Swift Playground Book for iPad #tryswifthack</title>
      <link>https://ja.ngs.io/2017/03/04/nxt-swift-playgrounds/</link>
      <guid>https://ja.ngs.io/2017/03/04/nxt-swift-playgrounds/</guid>
      <pubDate>Sat, 04 Mar 2017 14:59:00 -0000</pubDate>
      <author>a@ngs.io (長瀬 敦史)</author>
      <description>&lt;p&gt;2017-03-02, 03, 04 と行われていた try! Swift Tokyo の最終日に行われたハッカソンで、一人チームを結成し (?)、Lego Mindstorms NXT を操作するプログラミングを Swift Playgrounds iPad を使って学習できる、Book を開発しました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;GitHub Repo: ngs/mindstorms-nxt-playground-book
&lt;/li&gt;&lt;li&gt;Devpost Page: Mindstorms NXT Playground Book for iPad
&lt;/li&gt;&lt;/ul&gt;&lt;h2&gt;How it works&lt;/h2&gt;



&lt;p&gt;Mindstorms NXT Swift iPad Playgrounds from Atsushi Nagase on Vimeo.&lt;/p&gt;

&lt;p&gt;以下の様な Swift コードから、上のデモムービーのような動きを実装します。&lt;/p&gt;
  let nxt = NXT(name: "Hello NXT") // initialize robot
nxt.rotate(motor: .a, power: 100, angle: 145.0) // change angle of motor
// define sub routine
let sub = nxt.sub { nxt in
    nxt.forward(length: 100, turn: 0)
    nxt.wait(msec: 500)
    nxt.reverse(length: 100, turn: 0)
    nxt.wait(msec: 500)
}
// call sub routine
sub.call()  
&lt;h2&gt;Mindstorms NXT&lt;/h2&gt;

&lt;p&gt;Mindstorms NXT は 2006年に発売された、一昔前の教育用ロボット作成キットです。&lt;/p&gt;

&lt;p&gt;現行版の EV3 のように、iOS SDK や コントローラーアプリ などは用意されていません。&lt;/p&gt;

&lt;p&gt;そのため、以下の様なしくみで、プログラムを NXT に転送しています。&lt;/p&gt;

 
&lt;li&gt;Playgrounds で書いた Swift から NXC を書き出す
&lt;/li&gt;&lt;li&gt;書き出した NXC のコードをローカルネットワーク上のウェブサーバーに POST する
&lt;/li&gt;&lt;li&gt;ウェブサーバーで受け取ったソースコードを nbc NXC コンパイラコマンドにコンパイルさせる
&lt;/li&gt;&lt;li&gt;USB で NXT にバイナリを転送し、実行する
&lt;/li&gt; 

&lt;p&gt;以下のセットアップ方法を記載しますので、押し入れに眠っている NXT があったら、引っ張り出してきて、もう一度活躍させてあげてみてください。&lt;/p&gt;

&lt;h2&gt;NXC とは&lt;/h2&gt;

&lt;p&gt;NXC は Lego Mindstorms シリーズのために開発されたC言語ライク (Not eXactly C) なプログラミング言語です。&lt;/p&gt;

&lt;p&gt;参照: NXCを使った LEGO NXT ロボットプログラミング (和訳)&lt;/p&gt;

&lt;p&gt;Mindstorms NXT の標準プログラミングソフトウェアは、ブロックをつなぎ合わせて実行内容・条件を組み立てる、グラフィカルなものです。&lt;/p&gt;

&lt;p&gt;今回、上記フローの通り、サーバーサイドでコマンドライン実行でコンパイルできるプログラムを扱う必要があったので、この NXC を採用しました。&lt;/p&gt;

&lt;h2&gt;環境セットアップ&lt;/h2&gt;

&lt;p&gt;NXC を使うためには、NXT 本体にカスタムファームウェアをインストールする必要があります。&lt;/p&gt;

&lt;p&gt;Homebrew の定義ファイル (Formula) を用意したので、以下のコマンドを実行するだけで、準備が完了します。&lt;/p&gt;
  brew tap ngs/formulae
brew cask install nxt-fantom-driver # USB ドライバ
brew install nexttool nbc # コマンドラインツール
# カスタムファームウェアを解凍してインストール
wget http://bricxcc.sourceforge.net/lms_arm_nbcnxc.zip
unzip lms_arm_nbcnxc.zip
nexttool -firmware="lms_arm_nbcnxc/lms_arm_nbcnxc_132.rfw"  
&lt;p&gt;以上で下準備は完了です。Homebrew でインストールした nbc コマンドで NXC プログラムを実行してみましょう。&lt;/p&gt;
  echo 'task main () { OnFwdSync(OUT_A, 100, 0); Wait(1000); }' &amp;gt; test.nxc
nbc -r test.nxc  
&lt;p&gt;出力ポート A に接続されているモーターが1秒間回転したと思います。&lt;/p&gt;

&lt;h2&gt;ウェブサーバーの起動&lt;/h2&gt;

&lt;p&gt;このコマンドを HTTP で受信して実行するサーバーを起動します。&lt;/p&gt;

&lt;p&gt;サーバーサイドのアプリケーションも Swift で開発しました。&lt;/p&gt;

&lt;p&gt;Tokyo Server Side Swift Meetup 主催の Takei さん (@noppoMan) 作の Go 言語ライクな システム+ネットワーキング/HTTP ライブラリ Prorsum を利用しました。&lt;/p&gt;
  git clone git@github.com:ngs/mindstorms-nxt-playground-book.git
cd mindstorms-nxt-playground-book/Server
swift package generate-xcodeproj
open NXCBuild.xcodeproj  &lt;p&gt;Xcode が開くので、NXCBuild ターゲットを上のスクリーンショットと同じように選択し、⌘+ R でサーバーアプリケーションを起動します。&lt;/p&gt;

&lt;p&gt;プログラムを HTTP Body にして POST リクエストを送信します。&lt;/p&gt;
  curl --data 'task main () { OnFwdSync(OUT_A, 100, 0); Wait(1000); }' \
    http://localhost:3000  
&lt;p&gt;先ほどとおなじように、一秒間モーターが回ったと思います。&lt;/p&gt;

&lt;h2&gt;Playgrounds Book を iPad に転送&lt;/h2&gt;&lt;p&gt;Playgrounds Book は Air Drop か、iCloud Drive 経由の転送をサポートしています。&lt;/p&gt;

&lt;p&gt;リポジトリ に含まれている NXT.playgroundbook を Air Drop で iPad に転送するか、iCloud Drive にある Playgrounds フォルダにコピーしてください。&lt;/p&gt;&lt;p&gt;iPad で Swift Playgrounds を開くと、NXT というブックが追加されていると思います。&lt;/p&gt;

&lt;p&gt;以上でセットアップは完了です。&lt;/p&gt;

&lt;h2&gt;TODOs&lt;/h2&gt;

&lt;p&gt;今回のハッカソンは (遅刻したため) 時間が短かったので、モーターを動かす、サブルーチンを作成する、までしか実装できていません。&lt;/p&gt;

&lt;p&gt;今後、以下のような、機能を追加して、より複雑な操作が行えるようにしたいと思います。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;条件分岐の作成
&lt;/li&gt;&lt;li&gt;センサー入力値の取得
&lt;/li&gt;&lt;li&gt;サブルーチンの引数を指定・利用
&lt;/li&gt;&lt;/ul&gt;

&lt;h2&gt;ハッカソン&lt;/h2&gt;

&lt;p&gt;各地からあつまった Swift 好きのエンジニアの方々が、Swift 縛りで開発を行う、というもので、どのチームの作品もとても魅力的でした。&lt;/p&gt;

&lt;p&gt;次回も是非参加したいと思います。&lt;/p&gt;

&lt;p&gt;Balto を運営されている Goodpatch 社さんからスポンサー賞: Baltoの Medium Plan - 1年間分をいただいきました、ありがとうございます。&lt;/p&gt;

 &lt;p&gt;balto(Goodpatch)賞 Mindstorms NXT Playground Book for iPad | Devposthttps://t.co/50KxmeHZ6X  #tryswiftconf #tryswifthack pic.twitter.com/FbGvQDpnoG&lt;/p&gt;— にわタコ (@niwatako) March 4, 2017 



 &lt;p&gt;Swift meets Mindstorms by .@ngs #tryswiftconf #tryswifthack pic.twitter.com/KZNbZG7iOk&lt;/p&gt;— Yasuhiro Inami (@inamiy) March 4, 2017 



&lt;h2&gt;発表資料&lt;/h2&gt;


</description>
    </item>
    <item>
      <title>2016年 所感</title>
      <link>https://ja.ngs.io/2016/12/31/shokan2016/</link>
      <guid>https://ja.ngs.io/2016/12/31/shokan2016/</guid>
      <pubDate>Sat, 31 Dec 2016 13:55:00 -0000</pubDate>
      <author>a@ngs.io (長瀬 敦史)</author>
      <description>&lt;p&gt;今年は、家族で2013年以来、3年ぶりに母方の祖母が住む、尾道で家族と大晦日を迎えています。&lt;/p&gt;

&lt;p&gt;今年は大きな変化がなく、主に仕事にパワーを割いていました。&lt;/p&gt;&lt;h2&gt;仕事・技術&lt;/h2&gt;

&lt;p&gt;Oneteam Inc. での仕事は、主製品の Oneteam の開発を行っていたところから、徐々に新事業の模索や、顧客へのヒアリング・導入提案をビジネスチームと一緒に行い、内部の開発チームに起案・設計する、という業務を行っていました。&lt;/p&gt;

&lt;p&gt;来年も引き続き、顧客とのコミュニケーションと設計の業務を行う予定です。&lt;/p&gt;

&lt;p&gt;WWDC に参加した 直前後では、Server Side Swift や Playground についての研究もおこなっていましたが、業務内容が Swift と関係ない部分を担当するようになり、暫くさわっていない状態が続いています。&lt;/p&gt;

&lt;p&gt;趣味で開発している CI2Go の Swift 3 化でリハビリを行っていますが、なかなか往生しておる次第です。&lt;/p&gt;

&lt;p&gt;新たに業務・趣味で使い出したのが Go 言語 で、もともと触っていた Perl や Ruby と比べて、開発環境が充実しているのと、ライブラリの依存解決方法が中枢でない点がとても扱いやすく、メンテナンスが止まっている小さいプロジェクトや、趣味のプロジェクトを徐々に移行しています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;買い物チャット
&lt;/li&gt;&lt;li&gt;Wiplock
&lt;/li&gt;&lt;/ul&gt;

 執筆 &lt;p&gt;はじめて技術書の執筆に共著で参加させていただきました。&lt;/p&gt;

&lt;p&gt;Slack 入門 [ChatOps によるチーム開発の効率化]&lt;/p&gt;

 登壇 

&lt;p&gt;以下のイベントでの登壇を行いました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;02/10 Meguro.es #2 in Drecom
&lt;/li&gt;&lt;li&gt;02/16 dots.
&lt;/li&gt;&lt;li&gt;04/13 Collaboration Hack Meetup
&lt;/li&gt;&lt;li&gt;06/10 CircleCI Meetup
&lt;/li&gt;&lt;li&gt;06/22 WWDC 2016 の振り返り勉強会
&lt;/li&gt;&lt;li&gt;06/27 Tokyo Server-Side Swift Meetup #4
&lt;/li&gt;&lt;li&gt;07/05 「Slack入門」刊行記念LT大会
&lt;/li&gt;&lt;/ul&gt;

&lt;p&gt;ならべてみると、今年後半は対外活動が控えめだったので、もうすこし、コンスタントにそとに出て話をできるよう、ネタ集めを行っていこうと思います。&lt;/p&gt;

&lt;h2&gt;旅行&lt;/h2&gt;&lt;p&gt;ことしは車を使い始めたこともあり、家族での移動が増え、週末は充実していました。&lt;/p&gt;

&lt;p&gt;特に、今まで電車で行き辛かった場所へもキャンプ用具一式をもって家族ででむくことができたのはライフチェンジングでした。いつも一人で参加しているフェスに、妻子と参加もできました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;02/27-29 水上高原

&lt;ul&gt;
&lt;li&gt;長女の誕生日祝いにスキーへ行きました。
&lt;/li&gt;&lt;li&gt;次女がインフルエンザにかかり、長女・長男と共に上越新幹線で
&lt;/li&gt;&lt;/ul&gt;
&lt;/li&gt;&lt;li&gt;03/26-27 大岳山キャンプ場

&lt;ul&gt;
&lt;li&gt;あきる野市にある大岳山キャンプ場に行ってきました。
&lt;/li&gt;&lt;/ul&gt;
&lt;/li&gt;&lt;li&gt;04/06-10 台北

&lt;ul&gt;
&lt;li&gt;今年1月からジョインしてくた、台湾人デザイナー Carlos Liu の帰省+事務手続きに便乗して台北に行きました。
&lt;/li&gt;&lt;/ul&gt;
&lt;/li&gt;&lt;li&gt;05/14-15

&lt;ul&gt;
&lt;li&gt;横須賀市の IT 企業補助プログラムのサポートにより、会社のメンバーと開発合宿を行いました。
&lt;/li&gt;&lt;li&gt;http://www.yokosukaitcamp.com/
&lt;/li&gt;&lt;/ul&gt;
&lt;/li&gt;&lt;li&gt;06/04-05 Taicoclub

&lt;ul&gt;
&lt;li&gt;ひとりで車で参加しました。
&lt;/li&gt;&lt;li&gt;http://taicoclub.com/16/
&lt;/li&gt;&lt;/ul&gt;
&lt;/li&gt;&lt;li&gt;06/13-20 WWDC

&lt;ul&gt;
&lt;li&gt;WWDC 2012 より 4年ぶりに Moscone West の WWDC に参加してきました。
&lt;/li&gt;&lt;li&gt;毎度、素敵な出会いと再会があるので、素晴らしいカンファレンスです。来年も本体当選せずとも参加しようと思います。
&lt;/li&gt;&lt;/ul&gt;
&lt;/li&gt;&lt;li&gt;07/02-03 宮原オートキャンプ場

&lt;ul&gt;
&lt;li&gt;千葉県いすみ市にある宮原オートキャンプ場で一泊キャンプをおこないました。
&lt;/li&gt;&lt;li&gt;近くに ポッポの丘ギャラリー という古い鉄道車両が (野ざらしで) 展示されているスポットがあり、息子と自分は楽しめました。
&lt;/li&gt;&lt;li&gt;http://www.camp-miyahara.com/
&lt;/li&gt;&lt;/ul&gt;
&lt;/li&gt;&lt;li&gt;07/30-08/01 北海道

&lt;ul&gt;
&lt;li&gt;同僚と 第30回苫小牧ハスカップトライアスロン大会in勇払 に参加すべく北海道にいきました。
&lt;/li&gt;&lt;li&gt;スイムでリタイアしました。
&lt;/li&gt;&lt;/ul&gt;
&lt;/li&gt;&lt;li&gt;08/12-14 兵庫県竹野

&lt;ul&gt;
&lt;li&gt;両親と家族で竹野休暇村に2泊2日で海水浴旅行にいきました。
&lt;/li&gt;&lt;/ul&gt;
&lt;/li&gt;&lt;li&gt;09/10-11 Sawagi Festival @ 山中湖撫岳荘

&lt;ul&gt;
&lt;li&gt;はじめて家族と泊まりがけ音楽フェスに参加しました。
&lt;/li&gt;&lt;li&gt;http://www.sawagifes.com/
&lt;/li&gt;&lt;/ul&gt;
&lt;/li&gt;&lt;li&gt;10/01-02 CAMP Off Tone @ マウントピア黒平

&lt;ul&gt;
&lt;li&gt;甲府にある マウントピア黒平 で行われている CAMP Off Tone に参加しました。
&lt;/li&gt;&lt;li&gt;http://www.offtone.in/camp/
&lt;/li&gt;&lt;/ul&gt;
&lt;/li&gt;&lt;li&gt;10/08-09 朝霧 JAM

&lt;ul&gt;
&lt;li&gt;こちらも初参加です。ものすごい濃霧の中のフェスでした。
&lt;/li&gt;&lt;li&gt;http://smash-jpn.com/asagiri/
&lt;/li&gt;&lt;/ul&gt;
&lt;/li&gt;&lt;/ul&gt;

&lt;p&gt;釣りもそれなりに行って時間を割いていたのですが、こちらに残せるほどの結果を残せていないので、割愛します。&lt;/p&gt;

&lt;p&gt;来年もこりずに釣行いこうと思います。&lt;/p&gt;

&lt;h2&gt;音楽&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;04/24 小豆 バンド @ Live cafe Again

&lt;ul&gt;
&lt;li&gt;近所のバー Octant 常連の三味線の先生率いる限定バンドライブ。素晴らしかった。
&lt;/li&gt;&lt;/ul&gt;
&lt;/li&gt;&lt;li&gt;05/03 Pacha Tokyo 2016 @ 晴海客船ターミナル
&lt;/li&gt;&lt;li&gt;05/30 くるり NOW AND THEN vol.3 @ 神奈川県民ホール
&lt;/li&gt;&lt;li&gt;06/04-05 Taicoclub @ こだまの森

&lt;ul&gt;
&lt;li&gt;雨の中の Tycho がすばらしかった
&lt;/li&gt;&lt;/ul&gt;
&lt;/li&gt;&lt;li&gt;09/03 EMMA HOUSE
&lt;/li&gt;&lt;li&gt;09/10-11 Sawagi Festival @ 山中湖撫岳荘
&lt;/li&gt;&lt;li&gt;09/16 Tony Humphries Japan Tour 2016 ‘Soundbite’ Feat. Tony Humphries @ Contact Tokyo
&lt;/li&gt;&lt;li&gt;10/01-02 CAMP Off Tone @ マウントピア黒平
&lt;/li&gt;&lt;li&gt;10/08-09 朝霧 JAM
&lt;/li&gt;&lt;li&gt;10/21 David Morales Japan Tour
&lt;/li&gt;&lt;li&gt;11/19 Masters At Work @ ageha
&lt;/li&gt;&lt;/ul&gt;

&lt;p&gt;前述の旅行と重複する部分もありますが、上記の様なイベントに参加してました。&lt;/p&gt;

&lt;p&gt;充実していたと思います、来年も懲りずによい音楽を聴いていきたいと思います。&lt;/p&gt;

&lt;p&gt;晴海埠頭での開催が最後だった Body and SOUL Tokyo 2016 が WWDC へのフライトと調整がつかず、とても楽しみにしていた A Hundred Birds Orchestra 20th Aniversary 東京公演　が体調不良に参加できなかったのがとても悔やまれます。&lt;/p&gt;

&lt;h2&gt;健康&lt;/h2&gt;

&lt;p&gt;今年10月ごろから徐々にランニング通勤の回数が減ってきて、年末はほぼ電車通勤 (かつ寝不足か二日酔い) の時期がつづき、年末は風邪でダウンしてしまったため、来年は体力維持と規則正しい生活 (そしてあわよくば何かしら大会のリザルト) をのこせるといいなと思います。&lt;/p&gt;

&lt;h2&gt;家族&lt;/h2&gt;&lt;p&gt;今年で長男が幼稚園を卒園するので、毎朝お迎えは次女が入園するまでの1年間お休みになります。&lt;/p&gt;

&lt;p&gt;毎回思いますが、ついこの間まで赤ちゃんだったのが、小学校にあがりそれぞれ、友達ややりたいことを見つけて親から離れていくのは寂しくも思います。&lt;/p&gt;

&lt;p&gt;来年も、彼らに負けないぐらいアクティブに一年を過ごしたいと思います。&lt;/p&gt;
</description>
    </item>
    <item>
      <title>LINE ボットとの会話で Amazon 検索と購入をする - 買い物チャット</title>
      <link>https://ja.ngs.io/2016/12/11/line-buychat/</link>
      <guid>https://ja.ngs.io/2016/12/11/line-buychat/</guid>
      <pubDate>Sun, 11 Dec 2016 14:40:00 -0000</pubDate>
      <author>a@ngs.io (長瀬 敦史)</author>
      <description>&lt;p&gt;LINE ボット との会話で Amazon 検索と購入をする、買い物チャットをリリースしました。&lt;/p&gt;

   
 
&lt;h2&gt;商品を検索する&lt;/h2&gt;
&lt;p&gt;ボットを友だちに追加して、検索したい商品名をメッセージで送ります。&lt;/p&gt;
&lt;p&gt;該当した商品を最大5件、横スクロールの一覧を返信します。&lt;/p&gt;
 

    
 
&lt;h2&gt;バーコードで検索する&lt;/h2&gt;
&lt;p&gt;手元にあるものと、同じものを購入したい場合、バーコードの写真をとって、ボットに送ります。&lt;/p&gt;
&lt;p&gt;メッセージで送ったのと同じく、該当した商品を返信します。&lt;/p&gt;
 

    
 
&lt;h2&gt;カートに追加する&lt;/h2&gt;
&lt;p&gt;ボットが返信した商品の カートに追加 ボタンをタップすると、やりとりを行なっているチャット内でのみ有効なカートに商品が追加されます。&lt;/p&gt;
&lt;p&gt;グループチャットにボットを追加している場合、友人や家族と共通のカートで買い物を行え、レジャーやイベントの準備を一緒に行うことができます。&lt;/p&gt;
 

    
 
&lt;h2&gt;カートを見る&lt;/h2&gt;
&lt;p&gt;カート追加後に返信する商品下の カートを見る ボタンをタップすると、今までカートに追加した商品が横スクロールで返信します。&lt;/p&gt;
&lt;p&gt;カートへは、最大5件、商品を追加することができます。&lt;/p&gt;
&lt;p&gt;Amazon で購入しますか？ というメッセージの 購入する ボタンをタップすると、ウェブブラウザが開き、Amazon.co.jp のカートにまとめて追加できます。&lt;/p&gt;
 

   &lt;h2&gt;フィードバックをください！&lt;/h2&gt;

&lt;p&gt;利用していて、不便だったり、こんな機能があると嬉しい、などご意見がありましたら、以下のフォームからメッセージを送っていただけると幸いです。&lt;/p&gt;

&lt;p&gt;買い物チャット お問合せ&lt;/p&gt;
</description>
    </item>
  </channel>
</rss>
