<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:wfw="http://wellformedweb.org/CommentAPI/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" xmlns:slash="http://purl.org/rss/1.0/modules/slash/">
  <channel>
    <title>Atsushi Nagase</title>
    <atom:link href="https://ja.ngs.io/rss.xml" rel="self" type="application/rss+xml"/>
    <atom:link href="https://ja.ngs.io/feed.xml" type="application/atom+xml"/>
    <language>ja</language>
    <description>プログラミング、ガジェット、電子工作、ロードバイク、ランニング、旅行など、趣味や仕事のことを書き綴るブログ。</description>
    <link>https://ja.ngs.io/</link>
    <lastBuildDate>Fri, 29 May 2020 03:00:00 +0000</lastBuildDate>
    <item>
      <title>radiko の放送を AWS S3 に定時録音し Podcast として聞く</title>
      <link>https://ja.ngs.io/2020/05/29/radiko-podcast/</link>
      <guid>https://ja.ngs.io/2020/05/29/radiko-podcast/</guid>
      <pubDate>Fri, 29 May 2020 03:00:00 +0000</pubDate>
      <author>a@ngs.io (長瀬 敦史)</author>
      <description>&lt;p&gt;radiko の音声を録音するスクリプト Cron で実行し、AWS S3 に保存する運用を5年ほど前から行っていましたが、毎度 S3 からダウンロードし、Music アプリなどに取り込む、という作業が億劫で、しばらく聞かずに保存するだけの状態が続いていました。&lt;/p&gt;

&lt;p&gt;外部での打ち合わせが減り、事務所で一人作業することが増えたため、これを効率的に消化するべく、iOS, macOS の Podcast アプリで聞けるようにセットアップしました。&lt;/p&gt;&lt;h2&gt;構成&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;さくらの VPS / 東京第2ゾーン プラン 512

&lt;ul&gt;
&lt;li&gt;Ubuntu 18.04.4 LTS で Docker を実行
&lt;/li&gt;&lt;li&gt;ECS Fargate で実行したかったが、起動に数分かかるので、予め docker pull しておき、すぐ docker run できるよう、常駐させている
&lt;/li&gt;&lt;/ul&gt;
&lt;/li&gt;&lt;li&gt;AWS

&lt;ul&gt;
&lt;li&gt;S3: 音声データを保存する先
&lt;/li&gt;&lt;li&gt;Lambda: オブジェクトの作成 (音声データのアップロード) をハンドリングし、RSS を更新する
&lt;/li&gt;&lt;/ul&gt;
&lt;/li&gt;&lt;li&gt;Slack

&lt;ul&gt;
&lt;li&gt;録音開始と終了を通知
&lt;/li&gt;&lt;/ul&gt;
&lt;/li&gt;&lt;/ul&gt;

&lt;h2&gt;定時実行用 Docker コンテナ&lt;/h2&gt;

&lt;p&gt;GitHub 上で公開されている radish というスクリプトを利用します。&lt;/p&gt;

&lt;p&gt;radish をエントリーポイントとする Docker Image atsnngs/radish を、今回のユースケースのために拡張した atsnngs/radiko-recorder-s3 を利用します。&lt;/p&gt;
  docker pull atsnngs/radiko-recorder-s3:latest
  
&lt;p&gt;起動に必要な環境変数を設定ファイルに記載します。&lt;/p&gt;
  # ~/.radikorc
RADIKO_LOGIN=...
RADIKO_PASSWORD=...
S3_BUCKET=...
AWS_ACCESS_KEY_ID=AKIA...
AWS_SECRET_ACCESS_KEY=...
SLACK_WEBHOOK_URL=https://hooks.slack.com/services/....
SLACK_CHANNEL=...
  
&lt;p&gt;Crontab に録音したい番組の時間に Docker コンテナが起動するよう、記述します。&lt;/p&gt;
  0 0 * * 2 docker run --rm -e STATION=ALPHA-STATION -e DURATION_MINUTES=60 --env-file /home/ngs/.radikorc atsnngs/radiko-recorder-s3
  &lt;p&gt;ここまで設定すると、定時実行され、AWS S3 に 音声データが定時に保存され、上の画像の様に Slack チャネルに通知が飛びます。&lt;/p&gt;

&lt;h2&gt;Podcast フィードの更新&lt;/h2&gt;

&lt;p&gt;Podcast RSS フィードを更新するための Lambda スクリプトを設定します。&lt;/p&gt;

&lt;p&gt;一度つくったらしばらくメンテしないと考えたので、SAM や Serverless で構築の自動化などはせず、AWS Console のインラインエディタで実装しました。&lt;/p&gt;

&lt;p&gt;雑に、XML パーサー &amp;amp; ビルダーの npm モジュールなども使わず、バケット上に存在する feed.xml の文字列加工だけを行い、バケットに新しい feed.xml を配置します。&lt;/p&gt;

&lt;p&gt;初回バケットのルートに配置する feed.xml は、例えば、このようなものです。&lt;/p&gt;
  &amp;lt;?xml version="1.0"?&amp;gt;
&amp;lt;rss xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd" version="2.0"&amp;gt;
  &amp;lt;channel&amp;gt;
    &amp;lt;title&amp;gt;Radiko Recorder&amp;lt;/title&amp;gt;
    &amp;lt;link&amp;gt;https://github.com/ngs/docker-radiko-recorder-s3&amp;lt;/link&amp;gt;
    &amp;lt;image&amp;gt;
      &amp;lt;url&amp;gt;https://mydomain.tld/icon.png&amp;lt;/url&amp;gt;
      &amp;lt;title&amp;gt;Radiko Recorder&amp;lt;/title&amp;gt;
      &amp;lt;link&amp;gt;https://github.com/ngs/docker-radiko-recorder-s3&amp;lt;/link&amp;gt;
    &amp;lt;/image&amp;gt;
    &amp;lt;description&amp;gt;My Radiko Recordings&amp;lt;/description&amp;gt;
    &amp;lt;language&amp;gt;ja-jp&amp;lt;/language&amp;gt;
    &amp;lt;copyright&amp;gt;Personal Use Only&amp;lt;/copyright&amp;gt;
    &amp;lt;lastBuildDate&amp;gt;Thu, 28 May 2020 20:02:33 GMT&amp;lt;/lastBuildDate&amp;gt;
    &amp;lt;itunes:author&amp;gt;Radiko Recorder&amp;lt;/itunes:author&amp;gt;
    &amp;lt;itunes:summary&amp;gt;My Radiko Recordings&amp;lt;/itunes:summary&amp;gt;
    &amp;lt;itunes:subtitle&amp;gt;Personal Use&amp;lt;/itunes:subtitle&amp;gt;
    &amp;lt;itunes:owner&amp;gt;
      &amp;lt;itunes:name&amp;gt;Atsushi Nagase&amp;lt;/itunes:name&amp;gt;
      &amp;lt;itunes:email&amp;gt;a@ngs.io&amp;lt;/itunes:email&amp;gt;
    &amp;lt;/itunes:owner&amp;gt;
    &amp;lt;itunes:explicit&amp;gt;No&amp;lt;/itunes:explicit&amp;gt;
    &amp;lt;itunes:keywords/&amp;gt;
    &amp;lt;itunes:image href="https://mydomain.tld/icon.png"/&amp;gt;
    &amp;lt;itunes:category text="Music"/&amp;gt;
    &amp;lt;pubDate&amp;gt;Thu, 28 May 2020 20:02:33 GMT&amp;lt;/pubDate&amp;gt;
  &amp;lt;/channel&amp;gt;
&amp;lt;/rss&amp;gt;
  
&lt;p&gt;インラインエディタに以下のスクリプトを貼り付けます。&lt;/p&gt;
  const AWS = require('aws-sdk');
const s3 = new AWS.S3();

exports.handler = async (event) =&amp;gt; {
    const filename = 'feed.xml';
    const { bucket, object } = event.Records[0].s3;
    const { eventTime, awsRegion } = event.Records[0];
    const date = new Date(eventTime).toUTCString();
    console.info(JSON.stringify(event, null, 2));
    const res = await s3.getObject({ Bucket: bucket.name, Key: filename }).promise();
    let xml = res.Body.toString('utf-8').replace(/\s*&amp;lt;\/channel&amp;gt;[\n\s]*&amp;lt;\/rss&amp;gt;/, '').split('&amp;lt;item&amp;gt;');
    xml[0] = xml[0].replace(/&amp;lt;pubDate&amp;gt;[^&amp;lt;]+&amp;lt;\/pubDate&amp;gt;/, `&amp;lt;pubDate&amp;gt;${date}&amp;lt;/pubDate&amp;gt;`);
    xml[0] = xml[0].replace(/&amp;lt;lastBuildDate&amp;gt;[^&amp;lt;]+&amp;lt;\/lastBuildDate&amp;gt;/, `&amp;lt;lastBuildDate&amp;gt;${date}&amp;lt;/lastBuildDate&amp;gt;`);
    while(xml.length &amp;gt; 49) {
        xml.pop();
    }
    const url = `https://${bucket.name}.s3.${awsRegion}.amazonaws.com/${object.key}`;
    xml.splice(1, 0, `
          &amp;lt;title&amp;gt;${object.key.replace(/\.m4a$/, '')}&amp;lt;/title&amp;gt;
          &amp;lt;link&amp;gt;${url}&amp;lt;/link&amp;gt;
          &amp;lt;pubDate&amp;gt;${date}&amp;lt;/pubDate&amp;gt;
          &amp;lt;description&amp;gt;&amp;lt;/description&amp;gt;
          &amp;lt;enclosure url="${url}" length="${object.size}" type="audio/m4a" /&amp;gt;
          &amp;lt;guid&amp;gt;${url}&amp;lt;/guid&amp;gt;
          &amp;lt;itunes:explicit&amp;gt;no&amp;lt;/itunes:explicit&amp;gt;
        &amp;lt;/item&amp;gt;`)
    await s3.putObject({
        ACL: 'public-read',
        Body: xml.join('&amp;lt;item&amp;gt;').replace(/\s*\n+\s*/g, '') + '&amp;lt;/channel&amp;gt;&amp;lt;/rss&amp;gt;',
        Bucket: bucket.name,
        ContentType: 'application/rss+xml',
        Key: filename,
    }).promise();
    return null;
  
&lt;p&gt;トリガーを以下のように設定します。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;イベント: すべてのオブジェクト作成イベント
&lt;/li&gt;&lt;li&gt;サフィックス: .m4a
&lt;/li&gt;&lt;/ul&gt;

&lt;p&gt;以上で、m4a の配置を契機に feed.xml が更新されます。&lt;/p&gt;&lt;p&gt;iOS, macOS の Podcast アプリより、S3 の URL を設定してください。&lt;/p&gt;
  https://${バケット名}.s3.${リージョン}.amazonaws.com/feed.xml
  &lt;p&gt;以上で設定はすべて完了です。一般的な Podcast と同じ様に、録音された番組がエピソードとして表示されます。&lt;/p&gt;

&lt;p&gt;個人の趣味の範囲で活用いただければとおもいます。&lt;/p&gt;
</description>
    </item>
    <item>
      <title>CI2Go for macOS をリリースしました</title>
      <link>https://ja.ngs.io/2020/05/15/ci2go-maccatalyst/</link>
      <guid>https://ja.ngs.io/2020/05/15/ci2go-maccatalyst/</guid>
      <pubDate>Thu, 14 May 2020 15:00:00 +0000</pubDate>
      <author>a@ngs.io (長瀬 敦史)</author>
      <description>&lt;p&gt;iPhone, iPad, Apple Watch 向け CircleCI クライアント CI2Go の macOS 版を公開しました。&lt;/p&gt;

&lt;p&gt;iOS 版, macOS 版 共に同じ URL からダウンロードいただけます。&lt;/p&gt;&lt;p&gt;製品サイト: ci2go.app&lt;/p&gt;

&lt;p&gt;このアプリは、既存 iOS アプリのコードベースを Mac Catalyst を用いて移植したものです。&lt;/p&gt;&lt;p&gt;iOS 版, mac 版 両新バージョンは、以下の新機能を含みます。&lt;/p&gt;

&lt;h2&gt;ダークモード&lt;/h2&gt;&lt;p&gt;ダークモード に対応し、カラースキーム選択の機能の提供を終了しました。&lt;/p&gt;

&lt;h2&gt;iPad キーボードショートカット&lt;/h2&gt;&lt;p&gt;iPad キーボードショートカットが利用いただけるようになりました。&lt;/p&gt;

&lt;p&gt;⌘ [ で戻る、⌘ R で再読み込み、⌥ ⇧　⌘ L でログアウトを行います。&lt;/p&gt;

&lt;h2&gt;WIP: Workflows&lt;/h2&gt;

&lt;p&gt;CircleCI Workflows の対応は、まだ完全に行われていませんが、将来のマイルストーンには含まれています。&lt;/p&gt;

&lt;h2&gt;アップデートの舞台裏&lt;/h2&gt;&lt;p&gt;もちろん、Mac Catalyst アプリの継続的デリバリーも、iOS 版同様設定しました。&lt;/p&gt;

&lt;p&gt;また、パッケージ管理を Carthage から Swift Package Manager に変更しました。&lt;/p&gt;

&lt;p&gt;これらは、公開 GitHub リポジトリ に含まれており、どなたでも閲覧いただけます。&lt;/p&gt;

&lt;p&gt;私のように Mac Catalyst のアプリを CircleCI で構築しようとする、他の開発者の助けになればと幸いです。&lt;/p&gt;

&lt;p&gt;以下のようなワークアラウンドを行ったりしました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;macOS プラットフォームで、依存ビルドを含むと Swift パッケージのビルドが失敗する。

&lt;ul&gt;
&lt;li&gt;例: multiple configured targets of 'KeychainAccess' are being created for macOS
&lt;/li&gt;&lt;li&gt;ビルドターゲットを複製し、依存ビルドを削除しました。
&lt;/li&gt;&lt;li&gt;参照: Swift PM app in Xcode 11 (beta 5) gets four “My Mac” platform options
&lt;/li&gt;&lt;/ul&gt;
&lt;/li&gt;&lt;li&gt;&lt;p&gt;fastlane match で Mac Catalyst 向けのプロビジョニングが作成できない&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;platform: 'macos' を指定すると Mac 向けのものが作られる。
&lt;/li&gt;&lt;li&gt;&lt;p&gt;skip_provisioning_profiles を true に設定、.provisioningprofile ファイルをバージョン管理に追加し、CI のステップで ~/Library/MobileDevice/Provisioning Profiles/ にコピーするようにしました。&lt;/p&gt;
  match(
  type: 'development',
  app_identifier: %w(com.ci2go.ios.Circle),
  skip_provisioning_profiles: true,
  platform: 'macos'
)
  &lt;/li&gt;&lt;/ul&gt;
&lt;/li&gt;&lt;li&gt;&lt;p&gt;fastlane deliver が reject_if_possible: true を設定した再、platform を osx に設定しても、iOS のバイナリーを取り下げる。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;今の所 Mac 版では、 reject_if_possible を false に設定し、新しいバイナリーを提出する必要がある場合は手動で取り下げています。
&lt;/li&gt;&lt;/ul&gt;
&lt;/li&gt;&lt;li&gt;&lt;p&gt;fastlane deliver が Mac アプリの審査提出に失敗する。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Spaceship が App Store Connect API のレスポンス形式に対応できていない様子。
&lt;/li&gt;&lt;li&gt;ref: tunes_client.rb
&lt;/li&gt;&lt;li&gt;&lt;p&gt;例外を rescue しています。&lt;/p&gt;
  rescue NoMethodError =&amp;gt; e
  puts e
  raise e unless e.message == %q(undefined method `fetch' for nil:NilClass)
  puts "... Caught error, but omitting"
end
  &lt;/li&gt;&lt;/ul&gt;
&lt;/li&gt;&lt;/ul&gt;

&lt;h2&gt;応援する&lt;/h2&gt;

&lt;p&gt;GitHub Sponsors のページを公開しました。もしよかったら CI2Go の開発を応援してください 🙇‍♂️&lt;/p&gt;
</description>
    </item>
    <item>
      <title>2019年所感</title>
      <link>https://ja.ngs.io/2019/12/31/shokan2019/</link>
      <guid>https://ja.ngs.io/2019/12/31/shokan2019/</guid>
      <pubDate>Tue, 31 Dec 2019 00:00:00 +0000</pubDate>
      <author>a@ngs.io (長瀬 敦史)</author>
      <description>&lt;p&gt;今年は、大阪・尾道と帰省する予定でしたが、次女がボタン電池を飲み込むという事故を起こし、入院していたので、予定をキャンセルし、東京の自宅で年越しをしています。&lt;/p&gt;

&lt;p&gt;娘の手術は無事成功し、12/28 に退院しております。&lt;/p&gt;

&lt;p&gt;例年 にならい、2019年を振り返っていこうと思います。&lt;/p&gt;&lt;h2&gt;仕事・技術&lt;/h2&gt;&lt;p&gt;今年の仕事は、昨年12月に創業した インスタンスゼロの立ち上げに関する仕事 (各種事務処理・拠点開設) とクライアントワークを主に時間を割いていました。&lt;/p&gt;

&lt;p&gt;今年に入ってから経営に参画している Modelmap は、かねてより開発していた Analyzer を一旦保守フェーズと定め、アクティブな開発は止めており、現在は新しいサービスを構築するべく、非公開でいくつかの顧客にサービスを提供し、仮説検証を繰り返しています。来年には公にサービスとして告知できるのではと思います。&lt;/p&gt;

&lt;p&gt;5月を以って CAMPFIRE 社との雇用契約を終了し、常駐を求められる案件もお断りさせていただいているので、社内外のミーティング以外は、自分で時間をコントロールできるようになりました。&lt;/p&gt;

&lt;p&gt;年初は、とある案件でトラブルを抱え、不毛な交渉に時間をとられ疲弊していましたが、無事そちらも解決し、現在は、顧客やメンバー、パートナーに恵まれたおかげで、コンサルティングと開発の業務に集中できるようになりました。&lt;/p&gt;

&lt;p&gt;2019 年は、ほぼステルスで両社活動していましたが、2020 年は、我々の行っているサービスを言語化 (名付け・ビジュアライズなど) し、何の価値を提供するチームなのか、というのを認知してもらえるように仕掛けていこうと思います。&lt;/p&gt;

&lt;h2&gt;旅行・釣り&lt;/h2&gt;&lt;p&gt;旅行と釣行を振り返ってみると、家族旅行が2回だけだったので、土日に塾が入っていて調整が難しかったりしますが、来年は、もう少し家族も外に連れ出したいと思います。&lt;/p&gt;

&lt;p&gt;台風や大雨の影響で、複数のキャンプや釣行が中止になったのが残念ですが、来年は復帰し、災害が起きないことを祈っています。&lt;/p&gt;

&lt;p&gt;前述のとおり、時間のコントロールがしやすくなったので、平日釣行 (しながらオンラインで会議) し、土日に仕事をする、という日を増やしてみようとも思います。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;02/10-11 勝浦つるんつるん温泉
&lt;/li&gt;&lt;li&gt;03/01-02 養沢毛鉤専用釣場 + 大岳キャンプ場
&lt;/li&gt;&lt;li&gt;05/01-05 親戚宅 @ 能登
&lt;/li&gt;&lt;li&gt;05/18-19 千曲川釣行 (KKFC Meeting) + 廻り目平キャンプ場
&lt;/li&gt;&lt;li&gt;06/02 FFKT 帰りに 竜島温泉 せせらぎの湯 裏の梓川へ釣行
&lt;/li&gt;&lt;li&gt;06/08-09 宮原オートキャンプ場
&lt;/li&gt;&lt;li&gt;06/17 養沢毛鉤専用釣場&amp;nbsp;(日帰り)
&lt;/li&gt;&lt;li&gt;07/14-15 instance0 合宿 @ 山喜旅館
&lt;/li&gt;&lt;li&gt;07/29 フジロック帰りに清津川釣行 (台風直後の増水のため、断念)
&lt;/li&gt;&lt;li&gt;09/04-05 湯の湖・湯川 釣行 + 湯元キャンプ場
&lt;/li&gt;&lt;li&gt;09/21-23 KKFC 釣行キャンプ @ 檜枝岐川
&lt;/li&gt;&lt;li&gt;09/29-30 千曲川釣行 + 廻り目平キャンプ場
&lt;/li&gt;&lt;li&gt;10/30 養沢毛鉤専用釣場&amp;nbsp;(日帰り)
&lt;/li&gt;&lt;li&gt;11/01-05 沖縄 (イベント登壇 + 釣行)
&lt;/li&gt;&lt;li&gt;11/23-24 妻の友人に会うのに便乗して、千曲市訪問 (ホテルうづらや)

&lt;ul&gt;
&lt;li&gt;例年では、冬季ニジマス釣り場が実施されているようですが、台風19号による氾濫のため、中止されていました。
&lt;/li&gt;&lt;li&gt;翌週 11/30 より再開したようで、ニアミスでした。 (参照)
&lt;/li&gt;&lt;/ul&gt;
&lt;/li&gt;&lt;li&gt;11/30-12/01 田貫湖キャンプ場 家族キャンプ
&lt;/li&gt;&lt;li&gt;12/18-19 大岳キャンプ場 ソロキャンプ
&lt;/li&gt;&lt;/ul&gt;

&lt;h2&gt;音楽&lt;/h2&gt;&lt;p&gt;通常営業のクラブには一度しか行けていないことと、台風19号により中止になった 朝霧 Jam に行けなかったことが残念ですが、来年も悔いのないよう積極的に遊びにいこうと思います。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;03/08 i-dep x Hubert Lenoir at 伝承ホール
&lt;/li&gt;&lt;li&gt;03/23 Tokyo Disco Theque at 幕張メッセ
&lt;/li&gt;&lt;li&gt;04/05 SYNCHRONICITY 19 Pre Party at Duo Music Exchange
&lt;/li&gt;&lt;li&gt;04/27-29 Rainbow Disco Club 2019
&lt;/li&gt;&lt;li&gt;07/25-28 Fuji Rock Festival 2019 + 清津川釣行 (台風直後の増水のため、断念)
&lt;/li&gt;&lt;li&gt;06/01-02 FFKT 2019
&lt;/li&gt;&lt;li&gt;08/21 Cornelius Performs Point at Bunkamura オーチャードホール
&lt;/li&gt;&lt;li&gt;08/24 Todd Terry at Womb
&lt;/li&gt;&lt;li&gt;08/25 蓮沼執太フィル「日比谷、時が奏でる」
&lt;/li&gt;&lt;li&gt;08/31 BUDXTOKYO at CROSS DOCK HALL HARUMI
&lt;/li&gt;&lt;li&gt;09/25 bonobos x mabanua LIQUIDROOM 15th ANNIVERSARY
&lt;/li&gt;&lt;li&gt;11/17 MASTERS AT WORK in JAPAN at ageha Studio Coast
&lt;/li&gt;&lt;li&gt;12/10 中村佳穂 うたのげんざいち 2019 at Studio Coast
&lt;/li&gt;&lt;/ul&gt;

&lt;h2&gt;健康&lt;/h2&gt;

&lt;p&gt;11月ごろまでは、立ち上がりの忙しさにかまけて、全く運動をしていない日々を過ごし、マラソンやロードバイクどころの体ではなくなってしまったので、スポーツジム通いを再開させ、ウェイトトレーニングと食事制限を行なっています。&lt;/p&gt;

&lt;p&gt;まだ初めて1ヶ月ほどですが、数字には反映されているので、しばらくは上記を続けて、3月ごろからまた走り始めようかと思っています。&lt;/p&gt;

&lt;h2&gt;家族&lt;/h2&gt;&lt;p&gt;長女が小学校6年生、長男が3年生、次女が幼稚園年中になりました。&lt;/p&gt;

&lt;p&gt;今年の大半は拠点開設前だったので、比較的在宅なことが多く、一緒にいる時間がつくれました。&lt;/p&gt;

&lt;p&gt;家族とも趣味を共有するべく、自分は留守番をして、一度目は妻一人、二度目は妻と長女でライブに行ってもらい、喜んでもらえました。&lt;/p&gt;

&lt;p&gt;Minecraft に没頭している子供達にプログラミングの教本を与えてみたり、洗脳を試みています (今のところ効果は。。)&lt;/p&gt;

&lt;p&gt;引き続き、自分の趣味に引き込みつつ楽しい家庭にしていければと思います。&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Electron で Excel Desktop を拡張した舞台裏 #hcmpl</title>
      <link>https://ja.ngs.io/2019/11/02/electron-vsto/</link>
      <guid>https://ja.ngs.io/2019/11/02/electron-vsto/</guid>
      <pubDate>Sat, 02 Nov 2019 06:00:00 +0000</pubDate>
      <author>a@ngs.io (長瀬 敦史)</author>
      <description>

&lt;p&gt;ハッカーズチャンプルーアンカンファレンス 2019 で Modelmap Analyzer で実装している Excel Desktop の拡張についてお話しました。&lt;/p&gt;&lt;p&gt;後ほど写真をアップします。&lt;/p&gt;
</description>
    </item>
    <item>
      <title>インスタンスゼロの拠点を開設しました</title>
      <link>https://ja.ngs.io/2019/11/01/ins0-fudomae/</link>
      <guid>https://ja.ngs.io/2019/11/01/ins0-fudomae/</guid>
      <pubDate>Fri, 01 Nov 2019 10:00:00 +0000</pubDate>
      <author>a@ngs.io (長瀬 敦史)</author>
      <description>&lt;p&gt;昨年の創業 より、長瀬の自宅を本社とし、拠点なしのリモートのみで活動していた インスタンスゼロ ですが、この度、目黒区下目黒3丁目 に拠点を開設しました。&lt;/p&gt;&lt;p&gt;〒153-0064 東京都目黒区下目黒3-7-7 オノダビル 2F (Google Map)&lt;/p&gt;&lt;p&gt;メンバーやパートナーは引き続きリモートが主でで活動しますが、事務作業やミーティングなどでこの拠点を活用します。&lt;/p&gt;&lt;p&gt;美容室のパルさん のビル 2F です。&lt;/p&gt;&lt;p&gt;常駐スタッフはいませんが、長瀬は比較的こちらの事務所で作業していますので、お近くにお寄りの際は、是非、お気軽にお声がけください。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Modelmap</title>
      <link>https://ja.ngs.io/2019/02/12/modelmap/</link>
      <guid>https://ja.ngs.io/2019/02/12/modelmap/</guid>
      <pubDate>Mon, 11 Feb 2019 20:00:00 +0000</pubDate>
      <author>a@ngs.io (長瀬 敦史)</author>
      <description>&lt;p&gt;昨年より開発パートナーとして関わっていた Modelmap に、このたび、取締役 CTO として関わることになりました。&lt;/p&gt;

&lt;p&gt;Modelmap&lt;/p&gt;&lt;h2&gt;Modelmap について&lt;/h2&gt;

&lt;p&gt;Modelmap は &lt;strong&gt;財務モデリング (Financial Modelling) をオープン化する&lt;/strong&gt; をミッションにソフトウェアサービスを展開していきます。&lt;/p&gt;

&lt;p&gt;2017年に、財務モデリングの専門家である、代表 川井が米国で創業した Modelmap Co. は、投資銀行、財務コンサルタントなど、金融業界の実務家をターゲットとした仮説検証を行っていました。&lt;/p&gt;

&lt;p&gt;今回、日本法人 Modelmap 株式会社に経営を一本化し、今までの仮説検証で得た事業構想を実現するべく、再スタートを行ないます。&lt;/p&gt;

&lt;h2&gt;今後の展開について&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;エクセルワークシート内の構造をビジュアライズする Modelmap Analyzer
&lt;/li&gt;&lt;li&gt;樹形図を元にエクセルワークシートを構築する Modelmap Builder
&lt;/li&gt;&lt;li&gt;複雑な財務モデルをコンポネントとして共有する Model Hub
&lt;/li&gt;&lt;/ul&gt;

&lt;p&gt;現在は、第一弾製品の Modelmap Analyzer を Office Web Add-in として TypeScript + React.js を用いて開発しています。&lt;/p&gt;

&lt;p&gt;現在、この一連の製品に関わっていただける開発者を募集しています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;会社紹介
&lt;/li&gt;&lt;li&gt;ソフトウェア開発者 募集要項
&lt;/li&gt;&lt;/ul&gt;

&lt;p&gt;もしご興味がある方がいらっしゃいましたら、募集要項内のリンクから応募いただくか、連絡先 よりご連絡下さい。&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Go Release Binary GitHub Action</title>
      <link>https://ja.ngs.io/2019/02/08/go-release-action/</link>
      <guid>https://ja.ngs.io/2019/02/08/go-release-action/</guid>
      <pubDate>Fri, 08 Feb 2019 12:00:00 +0000</pubDate>
      <author>a@ngs.io (長瀬 敦史)</author>
      <description>&lt;p&gt;GitHub Marketplace に Go Release Binary Action を公開しました。&lt;/p&gt;

&lt;p&gt;Go Release Binary Action on GitHub Marketplace&lt;/p&gt;

&lt;p&gt;この GitHub Action は Go 言語で実装されたコマンドラインツールのバイナリを GitHub のリリースが作成されたら、自動的にビルドを行い、リリース資材に tarball を追加します。&lt;/p&gt;&lt;h2&gt;GitHub Actions&lt;/h2&gt;

&lt;p&gt;GitHub Actions は 2019/02/08 時点では限定公開ベータとして提供されており、以下のページより Beta にサインアップすることで利用できます。&lt;/p&gt;

&lt;p&gt;https://github.com/features/actions&lt;/p&gt;

&lt;h2&gt;利用例&lt;/h2&gt;&lt;p&gt;ngs/aws1pif@v1.0.0&lt;/p&gt;

&lt;p&gt;以下のように .workflow ファイルを設置し、GitHub の Releases 機能を使って新しく Release を作成すると、対象のコミットのビルド成果物を自動的にビルドし、リリース資材として追加します。&lt;/p&gt;
  # .github/main.workflow

workflow "Build" {
  on = "release"
  resolves = [
    "release darwin/amd64",
    "release windows/amd64",
    "release linux/amd64",
  ]
}

action "release darwin/amd64" {
  uses = "ngs/go-release.action@v1.0.0"
  env = {
    GOOS = "darwin"
    GOARCH = "amd64"
  }
  secrets = ["GITHUB_TOKEN"]
}

action "release windows/amd64" {
  uses = "ngs/go-release.action@v1.0.0"
  env = {
    GOOS = "windows"
    GOARCH = "amd64"
  }
  secrets = ["GITHUB_TOKEN"]
}

action "release linux/amd64" {
  uses = "ngs/go-release.action@v1.0.0"
  env = {
    GOOS = "linux"
    GOARCH = "amd64"
  }
  secrets = ["GITHUB_TOKEN"]
}
  </description>
    </item>
    <item>
      <title>AWS の credentials.csv を 1Password に取り込む CLI ツール</title>
      <link>https://ja.ngs.io/2019/02/07/aws1pif/</link>
      <guid>https://ja.ngs.io/2019/02/07/aws1pif/</guid>
      <pubDate>Thu, 07 Feb 2019 12:00:00 +0000</pubDate>
      <author>a@ngs.io (長瀬 敦史)</author>
      <description>&lt;p&gt;AWS の credentials.csv を 1Password の .1pif ファイルフォーマットとして出力するコマンドラインツールを公開しました。&lt;/p&gt;

&lt;p&gt;ngs/aws1pif&lt;/p&gt;&lt;h2&gt;インストール方法&lt;/h2&gt;

&lt;p&gt;Homebrew か go install コマンドを使ってインストールします。&lt;/p&gt;
  brew install ngs/formulae/aws1pif
  
&lt;p&gt;もしくは&lt;/p&gt;
  go install github.com/ngs/aws1pif
  
&lt;h2&gt;利用方法&lt;/h2&gt;

&lt;p&gt;aws1pif は標準出力として取り込んだ CSV を .1pif の JSON フォーマットで標準出力します。&lt;/p&gt;
  cat ~/Downloads/credentials.csv | aws1pif &amp;gt; aws.1pif
  
&lt;p&gt;保存された .1pif ファイルをダブルクリックなどで開くと、1Password が起動し、以下のように取り込みの確認ダイアログが出現します。&lt;/p&gt;&lt;p&gt;今の所、複数の Credential を取り込む機能はありません。&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Hop-on! みなとみらいで電動キックボード試乗</title>
      <link>https://ja.ngs.io/2019/02/02/hopon/</link>
      <guid>https://ja.ngs.io/2019/02/02/hopon/</guid>
      <pubDate>Sat, 02 Feb 2019 12:00:00 +0000</pubDate>
      <author>a@ngs.io (長瀬 敦史)</author>
      <description>&lt;p&gt;2019/02/02, 横浜みなとみらいで行われている電動キックボードの試乗会に参加しました。&lt;/p&gt;&lt;p&gt;この試乗会は CircleCI の Kim Hirokuni 氏 が主催する Hop-on! によって毎週土曜日、みなとみらいで開催されており、以下のフォームから参加登録ができます。&lt;/p&gt;

&lt;p&gt;電動キックボードアクティビティー体験会@みなとみらい&lt;/p&gt;&lt;p&gt;(Photo by Kazuhito Oyobe)&lt;/p&gt;

&lt;p&gt;現在は事業設計段階で、この試乗会から集まったフィードバックを元に事業化するそうです。&lt;/p&gt;

&lt;p&gt;現段階では、観光客向けの事業をベンチマークされているとのことで、もしかしたら、将来、観光旅行先で Hop-on! を使って現地を散策できるようになるかもしれません。&lt;/p&gt;

&lt;h2&gt;関連リンク&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;公式サイト: Hop-on!
&lt;/li&gt;&lt;li&gt;公式 Twitter: Hop-on! @hop__on on Twitter
&lt;/li&gt;&lt;li&gt;当日のレポート: 2019/02/02 みなとみらい電動キックボード体験会
&lt;/li&gt;&lt;li&gt;他の参加者の方のレポート: モビリティ革命！ 電動キックボードで公道を走ってきた話
&lt;/li&gt;&lt;li&gt;国内初、「電動キックボード」のシェアリングサービス目指す–福岡市が公道走行を提案 - CNET Japan
&lt;/li&gt;&lt;/ul&gt;
</description>
    </item>
    <item>
      <title>instance0 始動</title>
      <link>https://ja.ngs.io/2019/02/01/instance0/</link>
      <guid>https://ja.ngs.io/2019/02/01/instance0/</guid>
      <pubDate>Thu, 31 Jan 2019 15:00:00 +0000</pubDate>
      <author>a@ngs.io (長瀬 敦史)</author>
      <description>&lt;p&gt;キャリアを通じて、サービス開発を共にしてきた システムアーキテクチャ・GUI デザイン・品質保証・ソフトウェア開発 のプロフェッショナルである仲間たちと5名で、instance0, inc. / インスタンスゼロ株式会社 を立ち上げました。&lt;/p&gt;

&lt;p&gt;ins0.jp&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;システムアーキテクト 大澤 勇気
&lt;/li&gt;&lt;li&gt;UI デザイナー Carlos Liu
&lt;/li&gt;&lt;li&gt;QA エンジニア・ゼネラルマネージャー 田中 学二
&lt;/li&gt;&lt;li&gt;ソフトウェア開発者 佐藤 信吾
&lt;/li&gt;&lt;li&gt;ソフトウェア開発者・代表取締役社長 長瀨 敦史
&lt;/li&gt;&lt;/ul&gt;&lt;h2&gt;モチベーション&lt;/h2&gt;

&lt;p&gt;複数の企業・プロジェクトに、技術統括や顧問として関わる中で、システムアーキテクチャと品質保証、プロジェクトマネージメントの課題に直面することが多く、彼らとチームになって、それらを解決してきました。&lt;/p&gt;

&lt;p&gt;いくつかの現場をともした経験から、これらの課題は、一つの法人として各社と関わらせていただき、状況に応じて、自分たちのリソースを配分し、適材適所で課題解決に取り組むことで、顧客と我々双方のコストを効率化できると考え、設立に至りました。&lt;/p&gt;

&lt;h2&gt;今後の活動&lt;/h2&gt;

&lt;p&gt;当面、外部からの資金調達は行わない方針で運営します。&lt;/p&gt;

&lt;p&gt;顧客となる企業の技術組織、ワークフロー、アーキテクチャなどの設計・開発支援を行い、いずれは自走できるようにサポートさせていただきます。&lt;/p&gt;

&lt;p&gt;それと同時に、自らも継続的に新しいサービスを企画・開発し、仮説検証します。&lt;/p&gt;

&lt;p&gt;顧客・自社に関わらず、0番目のインスタンスを生産し続けていきます。&lt;/p&gt;

&lt;h2&gt;今後の人員&lt;/h2&gt;

&lt;p&gt;自分も含め、instance0 のメンバーは皆、複数の現場で複数の役割があります。&lt;/p&gt;

&lt;p&gt;法人という小さな枠で技術や知識を閉じ込めるのではなく、複数の環境を行ったり来たりすることで、関わるサービスの成長に、自分たちの専門性で寄与できれば幸いです。&lt;/p&gt;

&lt;p&gt;メンバーとして名前を出して活動しているのは、創業者5名ですが、すでに複数のパートナー企業・個人とプロジェクトを推進させていただいています。&lt;/p&gt;

&lt;p&gt;これからも、専門性を持った、ものづくりのパートナーに出会う機会を常に求めていきます。&lt;/p&gt;

&lt;p&gt;もし、われこそは、(とまでは言わないが、ちょっと興味あるぐらいでも) という方がいらっしゃいましたら、パートナー応募フォーム か 連絡先 よりご連絡ください。&lt;/p&gt;

&lt;p&gt;また instance0, inc. でアップデートがありましたら、こちらのブログでお知らせしていきます。&lt;/p&gt;
</description>
    </item>
  </channel>
</rss>
